import os
from dotenv import load_dotenv
from datasets import load_dataset

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
HF_API_TOKEN = os.getenv("HF_API_TOKEN")

def analyze_dataset_labels():
    """–ê–Ω–∞–ª–∏–∑ –º–µ—Ç–æ–∫ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ Rexhaif/ru-med-ner"""
    print("üîç –ê–Ω–∞–ª–∏–∑ –º–µ—Ç–æ–∫ –≤ –¥–∞—Ç–∞—Å–µ—Ç–µ Rexhaif/ru-med-ner")
    print("=" * 50)

    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞—Ç–∞—Å–µ—Ç
        dataset = load_dataset("Rexhaif/ru-med-ner", token=HF_API_TOKEN)
        train_dataset = dataset["train"]

        # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–∫–∏
        all_labels = set()
        for example in train_dataset:
            all_labels.update(example["ner_tags"])

        unique_labels = sorted(list(all_labels))
        print(f"üìã –ù–∞–π–¥–µ–Ω–Ω—ã–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –º–µ—Ç–∫–∏: {unique_labels}")
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Ç–æ–∫: {len(unique_labels)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ feature names
        if hasattr(train_dataset.features["ner_tags"], 'feature') and hasattr(train_dataset.features["ner_tags"].feature, 'names'):
            feature_names = train_dataset.features["ner_tags"].feature.names
            print(f"üìã –ò–º–µ–Ω–∞ –º–µ—Ç–æ–∫ –∏–∑ features: {feature_names}")
        else:
            print("‚ùå –ò–º–µ–Ω–∞ –º–µ—Ç–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ features")

        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏ –º–µ—Ç–∫–∞–º–∏
        expected_labels = list(range(13))  # 0 to 12
        if unique_labels == expected_labels:
            print("‚úÖ –ú–µ—Ç–∫–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –æ–∂–∏–¥–∞–µ–º—ã–º–∏ (0-12)")
        else:
            print("‚ùå –ú–µ—Ç–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!")
            print(f"–û–∂–∏–¥–∞–ª–æ—Å—å: {expected_labels}")
            print(f"–ü–æ–ª—É—á–µ–Ω–æ: {unique_labels}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞—Ç–∞—Å–µ—Ç–∞: {e}")

def print_label_comments():
    """–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –º–µ—Ç–∫–∞–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""
    print("\nüìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –º–µ—Ç–∫–∞–º:")
    print("=" * 50)

    label_comments = {
        "0": "O - –í–Ω–µ —Å—É—â–Ω–æ—Å—Ç–∏ (Outside). –¢–æ–∫–µ–Ω –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π —Å—É—â–Ω–æ—Å—Ç–∏.",
        "1": "B-DISEASE - –ù–∞—á–∞–ª–æ –±–æ–ª–µ–∑–Ω–∏ (Beginning of Disease). –ü–µ—Ä–≤—ã–π —Ç–æ–∫–µ–Ω –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–∏–∞–≥–Ω–æ–∑–∞.",
        "2": "I-DISEASE - –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –±–æ–ª–µ–∑–Ω–∏ (Inside Disease). –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è –∏–ª–∏ –¥–∏–∞–≥–Ω–æ–∑–∞.",
        "3": "B-SYMPTOM - –ù–∞—á–∞–ª–æ —Å–∏–º–ø—Ç–æ–º–∞ (Beginning of Symptom). –ü–µ—Ä–≤—ã–π —Ç–æ–∫–µ–Ω –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Å–∏–º–ø—Ç–æ–º–∞ –∏–ª–∏ –∂–∞–ª–æ–±—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞.",
        "4": "I-SYMPTOM - –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å–∏–º–ø—Ç–æ–º–∞ (Inside Symptom). –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Å–∏–º–ø—Ç–æ–º–∞ –∏–ª–∏ –∂–∞–ª–æ–±—ã –ø–∞—Ü–∏–µ–Ω—Ç–∞.",
        "5": "B-DRUG - –ù–∞—á–∞–ª–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ (Beginning of Drug). –ü–µ—Ä–≤—ã–π —Ç–æ–∫–µ–Ω –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞ –∏–ª–∏ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∞.",
        "6": "I-DRUG - –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ (Inside Drug). –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞ –∏–ª–∏ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∞.",
        "7": "B-ANATOMY - –ù–∞—á–∞–ª–æ –∞–Ω–∞—Ç–æ–º–∏–∏ (Beginning of Anatomy). –ü–µ—Ä–≤—ã–π —Ç–æ–∫–µ–Ω –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∞, —Ç–∫–∞–Ω–∏ –∏–ª–∏ —á–∞—Å—Ç–∏ —Ç–µ–ª–∞.",
        "8": "I-ANATOMY - –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∞–Ω–∞—Ç–æ–º–∏–∏ (Inside Anatomy). –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∞, —Ç–∫–∞–Ω–∏ –∏–ª–∏ —á–∞—Å—Ç–∏ —Ç–µ–ª–∞.",
        "9": "B-PROCEDURE - –ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã (Beginning of Procedure). –ü–µ—Ä–≤—ã–π —Ç–æ–∫–µ–Ω –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∏–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.",
        "10": "I-PROCEDURE - –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã (Inside Procedure). –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –∏–ª–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è.",
        "11": "B-FINDING - –ù–∞—á–∞–ª–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (Beginning of Finding). –ü–µ—Ä–≤—ã–π —Ç–æ–∫–µ–Ω –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è.",
        "12": "I-FINDING - –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ (Inside Finding). –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∏–ª–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è."
    }

    for key, comment in label_comments.items():
        print(f"{key}: {comment}")

if __name__ == "__main__":
    analyze_dataset_labels()
    print_label_comments()
